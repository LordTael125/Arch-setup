#!/bin/bash

#----------------------------------------------------------------------------------------------------------#


# The following will attempt to install all needed packages to prepare the arch
# This is a fast one-shot script with no error checking mechanism
# This script is meant to run on a clean, fresh system with a minimum install system


#----------------------------------------------------------------------------------------------------------#

#### Check for yay ####
ISYAY=/sbin/yay
if [ -f "$ISYAY" ]; then
    echo -e "yay was located, moving on. \n"
    yay -Suy
else
    echo -e "yay was not located, please install yay. Exiting script.\n"
    exit
fi

### Disable wifi powersave mode ###
echo -e 'Would you like to disable wifi powersave? '
read -n1 -rep 'The powersave features disables the wifi after some idle time (y,n)' WIFI
if [[ $WIFI == "Y" || $WIFI == "y" ]]; then
    LOC="/etc/NetworkManager/conf.d/wifi-powersave.conf"
    echo -e "The following has been added to $LOC. \n"
    echo -e "[connection]\nwifi.powersave = 2" | sudo tee -a $LOC
    echo -e "\n"
    echo -e "Restarting NetworkManager service...\n"
    sudo systemctl restart NetworkManager
    sleep 3
fi


#----------------------------------------------------------------------------------------------------------#


### Install all of the basic packages ####
read -n1 -rep 'Would you like to install the basic packages? (y,n)' INSTA
if [[ $INSTA == "Y" || $INSTA == "y" ]]; then
    yay -S --noconfirm mako thunar ttf-jetbrains-mono-nerd noto-fonts-emoji polkit-gnome python-requests htop \
    swappy grim pamixer brightnessctl gvfs bluez bluez-utils lxappearance xfce4-settings starship acpi \
    gnome-disk-utility tumbler gvfs gnome-text-editor evince flatpak vlc network-manager-applet \
    nm-connection-editor networkmanager-qt5 network-manager nano vim lib32-pipewire


    # Start the bluetooth service
    echo -e "Starting the Bluetooth Service...\n"
    sudo systemctl enable --now bluetooth.service
    sleep 2


fi


#----------------------------------------------------------------------------------------------------------#


### Install all of the Hyprland pacakges ####
read -n1 -rep 'Would you like to install the Hyprland packages? (y,n)' Hypr
if [[ $Hypr == "Y" || $Hypr == "y" ]]; then
    yay -S --noconfirm hyprland kitty waybar swaybg swaylock-effects wofi wlogout slurp dracula-gtk-theme \
    dracula-icons-git xdg-desktop-portal-hyprland thunar-archive-plugin thunar-media-tags-plugin thunar-volman


    # Clean out other portals
    echo -e "Cleaning out conflicting xdg portals...\n"
    yay -R --noconfirm xdg-desktop-portal-gnome xdg-desktop-portal-gtk

fi

#----------------------------------------------------------------------------------------------------------#


### Install all of the plasma packages ####
read -n1 -rep 'Would you like to install the KDE-Plasma packages? (y,n)' KDE
if [[ $KDE == "Y" || $KDE == "y" ]]; then
    yay -S --noconfirm plasma-desktopkdegraphics-thumbnailers kdenetwork-filesharing purpose discover \
    kaccounts-integration kscreen libaccounts-qt packagekit-qt6 plasma-nm plasma-pa scim dolphin \
    kde-cli-tools
fi


#----------------------------------------------------------------------------------------------------------#


### Install all the additional packages ###
read -n1 -rep 'Would you like to install additional packages? (y,n)' INSTB
if [[ $INSTB == "Y" || $INSTB == "y" ]]; then
    yay -S --noconfirm steam godot krita code microsoft-edge-stable-bin blender spotify kdenlive \
    obs-studio xarchiver wine wine-mono winetricks gitkraken virtualbox-host-modules-lts

    sudo pacman -S --noconfirm python-numpy python-pandas python-matplotlib jupyterlabs

fi


#----------------------------------------------------------------------------------------------------------#


echo 'Would you like to install nvidia driver for your machine?'
echo 'Note: This script will attempt install nvidia drivers for newer cards using nvidia-open ( Turing  / Ampere / Ada Lovelace )'
echo '      If you are using an older card press n, and install respective driver for card'
echo '      For reference you can visit arch official wiki for support'

read -n1 -rep 'Would you like to install? (y,n) \n ' DRI
if [[ $DRI == "Y" || $DRI == "y" ]]; then

    yay -S --noconfirm nvdia-open nvidia-settings nvidia-utils lib32-nvidia-utils \
    nvtop cuda opencl-nvidia lib32-opencl-nvidia nvidia-prime
fi


#----------------------------------------------------------------------------------------------------------#


### Copy Config Files ###
read -n1 -rep 'Would you like to copy config files for Hyprland? (y,n)' CFG
if [[ $CFG == "Y" || $CFG == "y" ]]; then
    echo -e "Copying config files...\n"
    cp -R hypr ~/.config/
    cp -R kitty ~/.config/
    cp -R mako ~/.config/
    cp -R waybar ~/.config/
    cp -R swaylock ~/.config/
    cp -R wofi ~/.config/


    # Set some files as exacutable
    chmod +x ~/.config/hypr/xdg-portal-hyprland
    chmod +x ~/.config/waybar/scripts/waybar-wttr.py

fi


#----------------------------------------------------------------------------------------------------------#


### Install teh starship shell ###
read -n1 -rep 'Would you like to install the starship shell? (y,n)' STAR
if [[ $STAR == "Y" || $STAR == "y" ]]; then
    # install the starship shell
    echo -e "Updating .bashrc...\n"
    echo -e '\neval "$(starship init bash)"' >> ~/.bashrc
    echo -e "copying starship config file to ~/.confg ...\n"
    cp starship.toml ~/.config/
fi


#----------------------------------------------------------------------------------------------------------#

echo 'Now installing Desktop Manager'
echo 'S : SDDM will be installed as Desktop Manager'
echo 'G : GDM  will be installed as Desktop Manager'
read -n1 -rep 'Choose the desktop Manager (s,g)' DM
if [[ $DM == "S" || $DM == "s" ]];
then

    yay -S --noconfirm sddm

    sudo systemctl enable sddm

elif [[$DM == 'G' || $DM == 'g']];
then

    yay -S --noconfirm gdm

    sudo systemctl enable gdm

else
    echo 'So You are a terminal guy very well NO DESKTOP MANAGER FOR YOU !!!!'
fi

#----------------------------------------------------------------------------------------------------------#


### Script is done ###
echo -e 'Script has completed.\n'
echo -e 'The system will begin a restart of the system'
sudo reboot -h now



#----------------------------------------------------------------------------------------------------------#
